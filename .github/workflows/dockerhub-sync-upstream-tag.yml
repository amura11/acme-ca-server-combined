name: Sync and Build on Upstream Tag (Docker Hub)

on:
  workflow_dispatch:

jobs:
  sync-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest upstream tag
        id: fetch-upstream-tag
        run: |
          TAG=$(curl -s https://registry.hub.docker.com/v2/repositories/knrdl/acme-ca-server/tags \
            | jq -r '.results[] | select(.name != "latest") | .name' | sort -V | tail -n1)
          echo "UPSTREAM_TAG=$TAG" >> $GITHUB_ENV
          echo "Latest upstream tag: $TAG"

      - name: Check if tag exists in Docker Hub
        id: check-dockerhub
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/acme-ca-server-combined/tags/$UPSTREAM_TAG)

          if [ "$STATUS" -eq 200 ]; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "Tag already exists on Docker Hub."
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "Tag does NOT exist on Docker Hub. Build needed."
          fi

      - name: Login to Docker Hub
        if: steps.check-dockerhub.outputs.tag_exists == 'false'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        if: steps.check-dockerhub.outputs.tag_exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/acme-ca-server-combined:${{ env.UPSTREAM_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/acme-ca-server-combined:latest
          build-args: |
            UPSTREAM_TAG=${{ env.UPSTREAM_TAG }}
